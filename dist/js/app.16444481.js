(function(){"use strict";var e={1973:function(e,t,n){var r=n(5130),o=n(6768),s=n(4232);const i={id:"app"},a={class:"container"},u={class:"pane left-pane"},l={class:"day-view",ref:"dayView"},c={class:"task-text"};function d(e,t,n,d,h,p){return(0,o.uX)(),(0,o.CE)("div",i,[(0,o.Lk)("div",a,[(0,o.Lk)("div",u,[h.isMarkdownView?(0,o.bo)(((0,o.uX)(),(0,o.CE)("textarea",{key:0,"onUpdate:modelValue":t[0]||(t[0]=e=>h.markdownContent=e),class:"editor-container",placeholder:"Enter Markdown content here..."},null,512)),[[r.Jo,h.markdownContent]]):(0,o.Q3)("",!0)]),(0,o.Lk)("div",{class:"resizer",onMousedown:t[1]||(t[1]=(...e)=>p.onMouseDown&&p.onMouseDown(...e))},null,32),(0,o.Lk)("div",{class:"pane right-pane",onWheel:t[2]||(t[2]=(...e)=>p.onWheel&&p.onWheel(...e))},[(0,o.Lk)("div",l,[((0,o.uX)(),(0,o.CE)(o.FK,null,(0,o.pI)(24,(e=>(0,o.Lk)("div",{class:"hour",key:e,style:(0,s.Tr)({height:`${h.hourHeight}px`})},(0,s.v_)(e)+":00 ",5))),64)),((0,o.uX)(!0),(0,o.CE)(o.FK,null,(0,o.pI)(h.tasks,(e=>((0,o.uX)(),(0,o.CE)("div",{class:"task",key:e.start.getTime(),style:(0,s.Tr)(p.taskStyle(e))},[(0,o.Lk)("div",c,(0,s.v_)(e.text),1)],4)))),128)),(0,o.Lk)("div",{class:"current-time-line",style:(0,s.Tr)(p.currentTimeLineStyle)},null,4)],512)],32)])])}n(4114);const h=n(7461);var p={name:"App",data(){return{isMarkdownView:!0,markdownContent:'# Simple Schedule\n\nPrompt: "Today I need to do laundry, grind coffee, go to the hardware store (20 minute drive each way), exercise for 45 minutes, have lunch, and do 1.5 hours of reading. Could you make a schedule for me, breaking these tasks into subtasks if needed, and output as plain text?   Aim for about 15-20 tasks total.  Feel free to add have overlapping tasks where it makes sense." \n\n8:00 AM - 8:15 AM: Start laundry (Load 1)\n8:00 AM - 8:15 AM: Grind coffee\n8:15 AM - 8:35 AM: Drive to hardware store\n8:35 AM - 9:05 AM: Shop at hardware store\n9:05 AM - 9:25 AM: Drive back home\n9:30 AM - 10:30 AM: Switch + Start Dryer\n10:00 AM - 10:45 AM: Exercise\n10:45 AM - 11:00 AM: Cool down and shower\n11:00 AM - 11:30 AM: Have lunch\n11:30 AM - 11:55 AM: Fold Laundry\n12:30 PM - 1:00 PM: Reading session 1\n1:00 PM - 1:15 PM: Break\n1:15 PM - 1:45 PM: Reading session 2\n1:45 PM - 2:00 PM: Break\n2:00 PM - 2:30 PM: Reading session 3',tasks:[],hourHeight:160,currentTime:new Date}},computed:{currentTimeLineStyle(){const e=this.currentTime,t=e.getHours()+e.getMinutes()/60,n=t*this.hourHeight;return{top:`${n}px`,height:"2px",width:"100%",backgroundColor:"blue",position:"absolute"}}},watch:{markdownContent(){this.tasks=this.extractTasks(this.markdownContent)}},methods:{strip(e){return e.replace(/^\s+|\s+$/g,"").replace(/^[\W_]+|[\W_]+$/g,"")},extractTasks(e){let t=[];return e.split("\n").forEach((e=>{const n=h.parse(e),r=n&&n.length>0?n[0]:null;if(r&&r.start&&r.end&&r.text){const n=r.start.date(),o=r.end.date(),s=this.strip(e.replace(r.text,""));t.push({start:n,end:o,text:s})}})),this.arrangeTasks(t)},arrangeTasks(e){const t=[];return e.forEach((e=>{let n=!1;for(let r=0;r<t.length;r++)if(!this.isOverlap(t[r],e)){t[r].push(e),n=!0;break}n||t.push([e])})),e.map((e=>{const n=t.findIndex((t=>t.includes(e)));return{...e,column:n}}))},isOverlap(e,t){return e.some((e=>!(t.end<=e.start||t.start>=e.end)))},toggleView(){this.isMarkdownView=!this.isMarkdownView},onMouseDown(e){const t=e.target,n=t.previousElementSibling,r=t.nextElementSibling,o=t.parentElement,s=e=>{const t=o.getBoundingClientRect(),s=e.clientX-t.left,i=t.right-e.clientX;s<200||i<200||(n.style.flexBasis=`${s}px`,r.style.flexBasis=`${i}px`)},i=()=>{document.removeEventListener("mousemove",s),document.removeEventListener("mouseup",i)};document.addEventListener("mousemove",s),document.addEventListener("mouseup",i)},taskStyle(e){const t=e.start.getHours()+e.start.getMinutes()/60,n=e.end.getHours()+e.end.getMinutes()/60,r=t*this.hourHeight,o=(n-t)*this.hourHeight,s=220*e.column;return{top:`${r}px`,height:`${o}px`,left:`${s}px`}},onWheel(e){if(!e.shiftKey)return;const t=this.$refs.dayView,n=t.getBoundingClientRect(),r=e.clientY-n.top,o=(r+t.scrollTop)/t.scrollHeight;e.deltaY<0?this.hourHeight=Math.min(this.hourHeight+10,200):this.hourHeight=Math.max(this.hourHeight-10,20),this.$nextTick((()=>{t.scrollTop=o*t.scrollHeight-r}))},updateCurrentTime(){this.currentTime=new Date}},mounted(){this.tasks=this.extractTasks(this.markdownContent),this.$nextTick((()=>{const e=this.$refs.dayView.querySelector(".task");e&&e.scrollIntoView()})),this.updateCurrentTime(),setInterval(this.updateCurrentTime,6e4)}},f=n(1241);const m=(0,f.A)(p,[["render",d]]);var g=m;(0,r.Ef)(g).mount("#app")}},t={};function n(r){var o=t[r];if(void 0!==o)return o.exports;var s=t[r]={exports:{}};return e[r].call(s.exports,s,s.exports,n),s.exports}n.m=e,function(){var e=[];n.O=function(t,r,o,s){if(!r){var i=1/0;for(c=0;c<e.length;c++){r=e[c][0],o=e[c][1],s=e[c][2];for(var a=!0,u=0;u<r.length;u++)(!1&s||i>=s)&&Object.keys(n.O).every((function(e){return n.O[e](r[u])}))?r.splice(u--,1):(a=!1,s<i&&(i=s));if(a){e.splice(c--,1);var l=o();void 0!==l&&(t=l)}}return t}s=s||0;for(var c=e.length;c>0&&e[c-1][2]>s;c--)e[c]=e[c-1];e[c]=[r,o,s]}}(),function(){n.n=function(e){var t=e&&e.__esModule?function(){return e["default"]}:function(){return e};return n.d(t,{a:t}),t}}(),function(){n.d=function(e,t){for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})}}(),function(){n.g=function(){if("object"===typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"===typeof window)return window}}()}(),function(){n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)}}(),function(){var e={524:0};n.O.j=function(t){return 0===e[t]};var t=function(t,r){var o,s,i=r[0],a=r[1],u=r[2],l=0;if(i.some((function(t){return 0!==e[t]}))){for(o in a)n.o(a,o)&&(n.m[o]=a[o]);if(u)var c=u(n)}for(t&&t(r);l<i.length;l++)s=i[l],n.o(e,s)&&e[s]&&e[s][0](),e[s]=0;return n.O(c)},r=self["webpackChunktextplanner"]=self["webpackChunktextplanner"]||[];r.forEach(t.bind(null,0)),r.push=t.bind(null,r.push.bind(r))}();var r=n.O(void 0,[504],(function(){return n(1973)}));r=n.O(r)})();
//# sourceMappingURL=app.16444481.js.map